{"Structs/BSONCoderOptions.html#/s:4BSON22CodingStrategyProviderP04databC0AA04DatabC0OSgvp":{"name":"dataCodingStrategy","parent_name":"BSONCoderOptions"},"Structs/BSONCoderOptions.html#/s:4BSON22CodingStrategyProviderP04datebC0AA04DatebC0OSgvp":{"name":"dateCodingStrategy","parent_name":"BSONCoderOptions"},"Structs/BSONCoderOptions.html#/s:4BSON22CodingStrategyProviderP04uuidbC0AA010UUIDCodingC0OSgvp":{"name":"uuidCodingStrategy","parent_name":"BSONCoderOptions"},"Structs/BSONCoderOptions.html#/s:4BSON16BSONCoderOptionsV18dataCodingStrategy04dateeF004uuideF0AcA04DataeF0OSg_AA04DateeF0OSgAA010UUIDCodingF0OSgtcfc":{"name":"init(dataCodingStrategy:dateCodingStrategy:uuidCodingStrategy:)","abstract":"<p>Initializes a new <code>BSONCoderOptions</code>.</p>","parent_name":"BSONCoderOptions"},"Structs/BSONTimestamp.html#/s:4BSON13BSONTimestampV9timestamps6UInt32Vvp":{"name":"timestamp","abstract":"<p>A timestamp representing seconds since the Unix epoch.</p>","parent_name":"BSONTimestamp"},"Structs/BSONTimestamp.html#/s:4BSON13BSONTimestampV9increments6UInt32Vvp":{"name":"increment","abstract":"<p>An incrementing ordinal for operations within a given second.</p>","parent_name":"BSONTimestamp"},"Structs/BSONTimestamp.html#/s:4BSON13BSONTimestampV9timestamp3incACs6UInt32V_AGtcfc":{"name":"init(timestamp:inc:)","abstract":"<p>Initializes a new  <code>BSONTimestamp</code> with the provided <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BSONTimestamp.html#/s:4BSON13BSONTimestampV9timestamps6UInt32Vvp\">timestamp</a></code> and <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BSONTimestamp.html#/s:4BSON13BSONTimestampV9increments6UInt32Vvp\">increment</a></code> values.</p>","parent_name":"BSONTimestamp"},"Structs/BSONSymbol.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"BSONSymbol"},"Structs/BSONSymbol.html#/s:4BSON10BSONSymbolV11stringValueSSvp":{"name":"stringValue","abstract":"<p>String representation of this <code>BSONSymbol</code>.</p>","parent_name":"BSONSymbol"},"Structs/BSONRegularExpression.html#/s:4BSON21BSONRegularExpressionV7patternSSvp":{"name":"pattern","abstract":"<p>The pattern for this regular expression.</p>","parent_name":"BSONRegularExpression"},"Structs/BSONRegularExpression.html#/s:4BSON21BSONRegularExpressionV7optionsSSvp":{"name":"options","abstract":"<p>A string containing options for this regular expression.</p>","parent_name":"BSONRegularExpression"},"Structs/BSONRegularExpression.html#/s:4BSON21BSONRegularExpressionV7pattern7optionsACSS_SStcfc":{"name":"init(pattern:options:)","abstract":"<p>Initializes a new <code>BSONRegularExpression</code> with the provided pattern and options.</p>","parent_name":"BSONRegularExpression"},"Structs/BSONRegularExpression.html#/s:4BSON21BSONRegularExpressionV4fromACSo09NSRegularC0C_tcfc":{"name":"init(from:)","abstract":"<p>Initializes a new <code>BSONRegularExpression</code> with the pattern and options of the provided <code>NSRegularExpression</code>.</p>","parent_name":"BSONRegularExpression"},"Structs/BSONRegularExpression.html#/s:4BSON21BSONRegularExpressionV011toNSRegularC0So0eC0CyKF":{"name":"toNSRegularExpression()","abstract":"<p>Converts this <code>BSONRegularExpression</code> to an <code>NSRegularExpression</code>.","parent_name":"BSONRegularExpression"},"Structs/BSONObjectID.html#/s:4BSON12BSONObjectIDV3hexSSvp":{"name":"hex","abstract":"<p>This <code>BSONObjectID</code>&lsquo;s data represented as a <code>String</code>.</p>","parent_name":"BSONObjectID"},"Structs/BSONObjectID.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"BSONObjectID"},"Structs/BSONObjectID.html#/s:4BSON12BSONObjectIDV9timestamp10Foundation4DateVvp":{"name":"timestamp","abstract":"<p>The timestamp portion of this <code>BSONObjectID</code> represented as a <code>Date</code>.</p>","parent_name":"BSONObjectID"},"Structs/BSONObjectID.html#/s:4BSON12BSONObjectIDVACycfc":{"name":"init()","abstract":"<p>Initializes a new <code>BSONObjectID</code>.</p>","parent_name":"BSONObjectID"},"Structs/BSONObjectID.html#/s:4BSON12BSONObjectIDVyACSSKcfc":{"name":"init(_:)","abstract":"<p>Initializes an <code>BSONObjectID</code> from the provided hex <code>String</code>.</p>","parent_name":"BSONObjectID"},"Structs/BSONObjectID.html#/s:Se4fromxs7Decoder_p_tKcfc":{"name":"init(from:)","parent_name":"BSONObjectID"},"Structs/BSONObjectID.html#/s:SE6encode2toys7Encoder_p_tKF":{"name":"encode(to:)","parent_name":"BSONObjectID"},"Structs/BSONDocumentIterator.html#/s:4BSON20BSONDocumentIteratorV4nextSS3key_A2AO5valuetSgyF":{"name":"next()","abstract":"<p>Advances to the next element and returns it, or nil if no next element exists.</p>","parent_name":"BSONDocumentIterator"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV12KeyValuePaira":{"name":"KeyValuePair","abstract":"<p>The element type of a document: a tuple containing an individual key-value pair.</p>","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentVACycfc":{"name":"init()","abstract":"<p>Initializes a new, empty <code>BSONDocument</code>.</p>","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV04fromA0AC10Foundation4DataV_tKcfc":{"name":"init(fromBSON:)","abstract":"<p>Initializes a new <code>BSONDocument</code> from the provided BSON data.</p>","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV04fromA0AC3NIO10ByteBufferV_tKcfc":{"name":"init(fromBSON:)","abstract":"<p>Initializes a new BSONDocument from the provided BSON data.","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV8fromJSONAC10Foundation4DataV_tKcfc":{"name":"init(fromJSON:)","abstract":"<p>Constructs a new <code>BSONDocument</code> from the provided JSON text.</p>","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV8fromJSONACSS_tKcfc":{"name":"init(fromJSON:)","abstract":"<p>Convenience initializer for constructing a <code>BSONDocument</code> from a <code>String</code>.</p>","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV20toExtendedJSONStringSSyF":{"name":"toExtendedJSONString()","abstract":"<p>Returns the relaxed extended JSON representation of this <code>BSONDocument</code>.","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV29toCanonicalExtendedJSONStringSSyF":{"name":"toCanonicalExtendedJSONString()","abstract":"<p>Returns the canonical extended JSON representation of this <code>BSONDocument</code>.","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV4keysSaySSGvp":{"name":"keys","abstract":"<p>The keys in this <code>BSONDocument</code>.</p>","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV6valuesSayA2AOGvp":{"name":"values","abstract":"<p>The values in this <code>BSONDocument</code>.</p>","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV5countSivp":{"name":"count","abstract":"<p>The number of (key, value) pairs stored at the top level of this document.</p>","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV6buffer3NIO10ByteBufferVvp":{"name":"buffer","abstract":"<p>A copy of the <code>ByteBuffer</code> backing this document, containing raw BSON data. As <code>ByteBuffer</code>s implement","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV6toData10Foundation0D0VyF":{"name":"toData()","abstract":"<p>Returns a <code>Data</code> containing a copy of the raw BSON data backing this document.</p>","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV6hasKeyySbSSF":{"name":"hasKey(_:)","abstract":"<p>Returns a <code>Boolean</code> indicating whether this <code>BSONDocument</code> contains the provided key.</p>","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentVyA2AOSgSScip":{"name":"subscript(_:)","abstract":"<p>Allows getting and setting values on the document via subscript syntax.","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV_7defaultA2AOSS_AEyXKtcip":{"name":"subscript(_:default:)","abstract":"<p>Looks up the specified key in the document and returns its corresponding value, or returns <code>defaultValue</code> if the","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV13dynamicMemberA2AOSgSS_tcip":{"name":"subscript(dynamicMember:)","abstract":"<p>Allows getting and setting values on the document using dot-notation syntax.","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV5Indexa":{"name":"Index","abstract":"<p>The index type of a document.</p>","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV10startIndexSivp":{"name":"startIndex","abstract":"<p>Returns the start index of the Document.</p>","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV8endIndexSivp":{"name":"endIndex","abstract":"<p>Returns the end index of the Document.</p>","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV5index5afterS2i_tF":{"name":"index(after:)","abstract":"<p>Returns the index after the given index for this Document.</p>","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentVySS3key_A2AO5valuetSicip":{"name":"subscript(_:)","abstract":"<p>Allows access to a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BSONDocument.html#/s:4BSON12BSONDocumentV12KeyValuePaira\">KeyValuePair</a></code> from the <code>BSONDocument</code>, given the position of the desired <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BSONDocument.html#/s:4BSON12BSONDocumentV12KeyValuePaira\">KeyValuePair</a></code> held","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentVyACSnySiGcip":{"name":"subscript(_:)","abstract":"<p>Allows access to a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BSONDocument.html#/s:4BSON12BSONDocumentV12KeyValuePaira\">KeyValuePair</a></code> from the <code>BSONDocument</code>, given a range of indices of the desired","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV11SubSequencea":{"name":"SubSequence","abstract":"<p>The type that is returned from methods such as <code>dropFirst()</code> and <code>split()</code>.</p>","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV7isEmptySbvp":{"name":"isEmpty","abstract":"<p>Returns a <code>Bool</code> indicating whether the document is empty.</p>","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV12makeIteratorAA0bD0VyF":{"name":"makeIterator()","abstract":"<p>Returns a <code>DocumentIterator</code> over the values in this <code>Document</code>.</p>","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV9mapValuesyAc2AOAEKXEKF":{"name":"mapValues(_:)","abstract":"<p>Returns a new document containing the keys of this document with the values transformed by the given closure.</p>","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV9dropFirstyACSiF":{"name":"dropFirst(_:)","abstract":"<p>Returns a document containing all but the given number of initial key-value pairs.</p>","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV8dropLastyACSiF":{"name":"dropLast(_:)","abstract":"<p>Returns a document containing all but the given number of final key-value pairs.</p>","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV4drop5whileACSbSS3key_A2AO5valuet_tKXE_tKF":{"name":"drop(while:)","abstract":"<p>Returns a document by skipping the initial, consecutive key-value pairs that satisfy the given predicate.</p>","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV6prefixyACSiF":{"name":"prefix(_:)","abstract":"<p>Returns a document, up to the specified maximum length, containing the initial key-value pairs of the document.</p>","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV6prefix5whileACSbSS3key_A2AO5valuet_tKXE_tKF":{"name":"prefix(while:)","abstract":"<p>Returns a document containing the initial, consecutive key-value pairs that satisfy the given predicate.</p>","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV6suffixyACSiF":{"name":"suffix(_:)","abstract":"<p>Returns a document, up to the specified maximum length, containing the final key-value pairs of the document.</p>","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV5split9maxSplits25omittingEmptySubsequences14whereSeparatorSayACGSi_S2bSS3key_A2AO5valuet_tKXEtKF":{"name":"split(maxSplits:omittingEmptySubsequences:whereSeparator:)","abstract":"<p>Returns the longest possible subsequences of the document, in order, that don’t contain key-value pairs","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV17dictionaryLiteralACSS_A2AOtd_tcfc":{"name":"init(dictionaryLiteral:)","abstract":"<p>Initializes a <code>BSONDocument</code> using a dictionary literal where the keys are <code>Strings</code> and the values are <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/BSON.html\">BSON</a></code>s.","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"BSONDocument"},"Structs/BSONDocument.html#/s:4BSON12BSONDocumentV6filteryACSbSS3key_A2AO5valuet_tKXEKF":{"name":"filter(_:)","abstract":"<p>Returns a new document containing the elements of the document that satisfy the given predicate.</p>","parent_name":"BSONDocument"},"Structs/BSONDecimal128.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"BSONDecimal128"},"Structs/BSONDecimal128.html#/s:4BSON14BSONDecimal128VyACSSKcfc":{"name":"init(_:)","abstract":"<p>Initializes a new <code>BSONDecimal128</code> from the input string.</p>","parent_name":"BSONDecimal128"},"Structs/BSONDBPointer.html#/s:4BSON13BSONDBPointerV3refSSvp":{"name":"ref","abstract":"<p>Destination namespace of the pointer.</p>","parent_name":"BSONDBPointer"},"Structs/BSONDBPointer.html#/s:4BSON13BSONDBPointerV2idAA12BSONObjectIDVvp":{"name":"id","abstract":"<p>Destination _id (assumed to be an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BSONObjectID.html\">BSONObjectID</a></code>) of the pointed-to document.</p>","parent_name":"BSONDBPointer"},"Structs/BSONCodeWithScope.html#/s:4BSON17BSONCodeWithScopeV4codeSSvp":{"name":"code","abstract":"<p>A string containing Javascript code.</p>","parent_name":"BSONCodeWithScope"},"Structs/BSONCodeWithScope.html#/s:4BSON17BSONCodeWithScopeV5scopeAA12BSONDocumentVvp":{"name":"scope","abstract":"<p>An optional scope <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BSONDocument.html\">BSONDocument</a></code> containing a mapping of identifiers to values,","parent_name":"BSONCodeWithScope"},"Structs/BSONCodeWithScope.html#/s:4BSON17BSONCodeWithScopeV4code5scopeACSS_AA12BSONDocumentVtcfc":{"name":"init(code:scope:)","abstract":"<p>Initializes a <code>BSONCodeWithScope</code> with an optional scope value.</p>","parent_name":"BSONCodeWithScope"},"Structs/BSONCode.html#/s:4BSON8BSONCodeV4codeSSvp":{"name":"code","abstract":"<p>A string containing Javascript code.</p>","parent_name":"BSONCode"},"Structs/BSONCode.html#/s:4BSON8BSONCodeV4codeACSS_tcfc":{"name":"init(code:)","abstract":"<p>Initializes a <code>BSONCode</code> with an optional scope value.</p>","parent_name":"BSONCode"},"Structs/BSONBinary/Subtype.html#/s:4BSON10BSONBinaryV7SubtypeV7genericAEvpZ":{"name":"generic","abstract":"<p>Generic binary subtype</p>","parent_name":"Subtype"},"Structs/BSONBinary/Subtype.html#/s:4BSON10BSONBinaryV7SubtypeV8functionAEvpZ":{"name":"function","abstract":"<p>A function</p>","parent_name":"Subtype"},"Structs/BSONBinary/Subtype.html#/s:4BSON10BSONBinaryV7SubtypeV16binaryDeprecatedAEvpZ":{"name":"binaryDeprecated","abstract":"<p>Binary (old)</p>","parent_name":"Subtype"},"Structs/BSONBinary/Subtype.html#/s:4BSON10BSONBinaryV7SubtypeV14uuidDeprecatedAEvpZ":{"name":"uuidDeprecated","abstract":"<p>UUID (old)</p>","parent_name":"Subtype"},"Structs/BSONBinary/Subtype.html#/s:4BSON10BSONBinaryV7SubtypeV4uuidAEvpZ":{"name":"uuid","abstract":"<p>UUID (RFC 4122)</p>","parent_name":"Subtype"},"Structs/BSONBinary/Subtype.html#/s:4BSON10BSONBinaryV7SubtypeV3md5AEvpZ":{"name":"md5","abstract":"<p>MD5</p>","parent_name":"Subtype"},"Structs/BSONBinary/Subtype.html#/s:4BSON10BSONBinaryV7SubtypeV14encryptedValueAEvpZ":{"name":"encryptedValue","abstract":"<p>Encrypted BSON value</p>","parent_name":"Subtype"},"Structs/BSONBinary/Subtype.html#/s:4BSON10BSONBinaryV7SubtypeV8rawValues5UInt8Vvp":{"name":"rawValue","abstract":"<p>Subtype indicator value</p>","parent_name":"Subtype"},"Structs/BSONBinary/Subtype.html#/s:4BSON10BSONBinaryV7SubtypeV8rawValueAESgs5UInt8V_tcfc":{"name":"init(rawValue:)","abstract":"<p>Initializes a <code>Subtype</code> with a custom value.","parent_name":"Subtype"},"Structs/BSONBinary/Subtype.html#/s:4BSON10BSONBinaryV7SubtypeV11userDefinedyAESiKFZ":{"name":"userDefined(_:)","abstract":"<p>Initializes a <code>Subtype</code> with a custom value. This value must be in the range 0x80-0xFF.</p>","parent_name":"Subtype"},"Structs/BSONBinary.html#/s:4BSON10BSONBinaryV4data3NIO10ByteBufferVvp":{"name":"data","abstract":"<p>The binary data.</p>","parent_name":"BSONBinary"},"Structs/BSONBinary.html#/s:4BSON10BSONBinaryV7subtypeAC7SubtypeVvp":{"name":"subtype","abstract":"<p>The binary subtype for this data.</p>","parent_name":"BSONBinary"},"Structs/BSONBinary/Subtype.html":{"name":"Subtype","abstract":"<p>Subtypes for BSON Binary values.</p>","parent_name":"BSONBinary"},"Structs/BSONBinary.html#/s:4BSON10BSONBinaryV4fromAC10Foundation4UUIDV_tKcfc":{"name":"init(from:)","abstract":"<p>Initializes a <code>BSONBinary</code> instance from a <code>UUID</code>.</p>","parent_name":"BSONBinary"},"Structs/BSONBinary.html#/s:4BSON10BSONBinaryV4data7subtypeAC10Foundation4DataV_AC7SubtypeVtKcfc":{"name":"init(data:subtype:)","abstract":"<p>Initializes a <code>BSONBinary</code> instance from a <code>Data</code> object and a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BSONBinary/Subtype.html\">Subtype</a></code> subtype.","parent_name":"BSONBinary"},"Structs/BSONBinary.html#/s:4BSON10BSONBinaryV6base647subtypeACSS_AC7SubtypeVtKcfc":{"name":"init(base64:subtype:)","abstract":"<p>Initializes a <code>BSONBinary</code> instance from a base64 <code>String</code> and a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BSONBinary/Subtype.html\">Subtype</a></code>.</p>","parent_name":"BSONBinary"},"Structs/BSONBinary.html#/s:4BSON10BSONBinaryV6toUUID10Foundation0D0VyKF":{"name":"toUUID()","abstract":"<p>Converts this <code>BSONBinary</code> instance to a <code>UUID</code>.</p>","parent_name":"BSONBinary"},"Structs/BSONBinary.html":{"name":"BSONBinary","abstract":"<p>A struct to represent the BSON Binary type.</p>"},"Structs/BSONCode.html":{"name":"BSONCode","abstract":"<p>A struct to represent the BSON Code type.</p>"},"Structs/BSONCodeWithScope.html":{"name":"BSONCodeWithScope","abstract":"<p>A struct to represent BSON CodeWithScope.</p>"},"Structs/BSONDBPointer.html":{"name":"BSONDBPointer","abstract":"<p>A struct to represent the deprecated DBPointer type."},"Structs/BSONDecimal128.html":{"name":"BSONDecimal128","abstract":"<p>A struct to represent the BSON Decimal128 type.</p>"},"Structs/BSONDocument.html":{"name":"BSONDocument","abstract":"<p>A struct representing the BSON document type.</p>"},"Structs/BSONDocumentIterator.html":{"name":"BSONDocumentIterator","abstract":"<p>Iterator over a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BSONDocument.html\">BSONDocument</a></code>. This type is not meant to be used directly; please use <code>Sequence</code> protocol methods"},"Structs/BSONObjectID.html":{"name":"BSONObjectID","abstract":"<p>A struct to represent the BSON ObjectID type.</p>"},"Structs/BSONRegularExpression.html":{"name":"BSONRegularExpression","abstract":"<p>A struct to represent a BSON regular expression.</p>"},"Structs/BSONSymbol.html":{"name":"BSONSymbol","abstract":"<p>A struct to represent the deprecated Symbol type."},"Structs/BSONTimestamp.html":{"name":"BSONTimestamp","abstract":"<p>A struct to represent the BSON Timestamp type. This type is for internal MongoDB use. For most cases, in"},"Structs/BSONCoderOptions.html":{"name":"BSONCoderOptions","abstract":"<p>Options struct used for configuring the coding strategies on <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/BSONEncoder.html\">BSONEncoder</a></code> and <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/BSONDecoder.html\">BSONDecoder</a></code>.</p>"},"Protocols/CodingStrategyProvider.html#/s:4BSON22CodingStrategyProviderP04datebC0AA04DatebC0OSgvp":{"name":"dateCodingStrategy","abstract":"<p>Specifies the strategy to use when converting <code>Date</code>s between their BSON representations and their","parent_name":"CodingStrategyProvider"},"Protocols/CodingStrategyProvider.html#/s:4BSON22CodingStrategyProviderP04uuidbC0AA010UUIDCodingC0OSgvp":{"name":"uuidCodingStrategy","abstract":"<p>Specifies the strategy to use when converting <code>UUID</code>s between their BSON representations and their","parent_name":"CodingStrategyProvider"},"Protocols/CodingStrategyProvider.html#/s:4BSON22CodingStrategyProviderP04databC0AA04DatabC0OSgvp":{"name":"dataCodingStrategy","abstract":"<p>Specifies the strategy to use when converting <code>Data</code>s between their BSON representations and their","parent_name":"CodingStrategyProvider"},"Protocols.html#/s:4BSON17BSONErrorProtocolP":{"name":"BSONErrorProtocol","abstract":"<p>An empty protocol for encapsulating all errors that BSON package can throw.</p>"},"Protocols/CodingStrategyProvider.html":{"name":"CodingStrategyProvider","abstract":"<p>Protocol indicating a set of options can be used to configure <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/BSONEncoder.html\">BSONEncoder</a></code> and <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/BSONDecoder.html\">BSONDecoder</a></code>.</p>"},"Enums/DataCodingStrategy.html#/s:SY8RawValueQa":{"name":"RawValue","parent_name":"DataCodingStrategy"},"Enums/DataCodingStrategy.html#/s:4BSON18DataCodingStrategyO010deferredToB0yA2CmF":{"name":"deferredToData","abstract":"<p>Encode/decode the <code>Data</code> by deferring to its default encoding implementations.</p>","parent_name":"DataCodingStrategy"},"Enums/DataCodingStrategy.html#/s:4BSON18DataCodingStrategyO6binaryyA2CmF":{"name":"binary","abstract":"<p>Encode/decode the <code>Data</code> to/from a BSON binary type (default).</p>","parent_name":"DataCodingStrategy"},"Enums/DataCodingStrategy.html#/s:4BSON18DataCodingStrategyO6base64yA2CmF":{"name":"base64","abstract":"<p>Encode the <code>Data</code> to/from a base64 encoded string.</p>","parent_name":"DataCodingStrategy"},"Enums/DataCodingStrategy.html#/s:4BSON18DataCodingStrategyO6customyACy10Foundation0B0V_s7Encoder_ptKc_AGs7Decoder_pKctcACmF":{"name":"custom(encodeFunc:decodeFunc:)","abstract":"<p>Encode the <code>Data</code> by using the given <code>encodeFunc</code>. Decode the <code>Data</code> by using the given <code>decodeFunc</code>.","parent_name":"DataCodingStrategy"},"Enums/DataCodingStrategy.html#/s:SY8rawValuexSg03RawB0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"DataCodingStrategy"},"Enums/DataCodingStrategy.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"DataCodingStrategy"},"Enums/UUIDCodingStrategy.html#/s:SY8RawValueQa":{"name":"RawValue","parent_name":"UUIDCodingStrategy"},"Enums/UUIDCodingStrategy.html#/s:4BSON18UUIDCodingStrategyO14deferredToUUIDyA2CmF":{"name":"deferredToUUID","abstract":"<p>Encode/decode the <code>UUID</code> by deferring to its default encoding/decoding implementations.</p>","parent_name":"UUIDCodingStrategy"},"Enums/UUIDCodingStrategy.html#/s:4BSON18UUIDCodingStrategyO6binaryyA2CmF":{"name":"binary","abstract":"<p>Encode/decode the <code>UUID</code> to/from a BSON binary type (default).</p>","parent_name":"UUIDCodingStrategy"},"Enums/UUIDCodingStrategy.html#/s:SY8rawValuexSg03RawB0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"UUIDCodingStrategy"},"Enums/UUIDCodingStrategy.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"UUIDCodingStrategy"},"Enums/DateCodingStrategy.html#/s:SY8RawValueQa":{"name":"RawValue","parent_name":"DateCodingStrategy"},"Enums/DateCodingStrategy.html#/s:4BSON18DateCodingStrategyO010deferredToB0yA2CmF":{"name":"deferredToDate","abstract":"<p>Encode/decode the <code>Date</code> by deferring to its default encoding/decoding implementations.</p>","parent_name":"DateCodingStrategy"},"Enums/DateCodingStrategy.html#/s:4BSON18DateCodingStrategyO04bsonB4TimeyA2CmF":{"name":"bsonDateTime","abstract":"<p>Encode/decode the <code>Date</code> to/from a BSON datetime object (default).</p>","parent_name":"DateCodingStrategy"},"Enums/DateCodingStrategy.html#/s:4BSON18DateCodingStrategyO21millisecondsSince1970yA2CmF":{"name":"millisecondsSince1970","abstract":"<p>Encode/decode the <code>Date</code> to/from a 64-bit integer counting the number of milliseconds since January 1, 1970.</p>","parent_name":"DateCodingStrategy"},"Enums/DateCodingStrategy.html#/s:4BSON18DateCodingStrategyO16secondsSince1970yA2CmF":{"name":"secondsSince1970","abstract":"<p>Encode/decode the <code>Date</code> to/from a BSON double counting the number of seconds since January 1, 1970.</p>","parent_name":"DateCodingStrategy"},"Enums/DateCodingStrategy.html#/s:4BSON18DateCodingStrategyO7iso8601yA2CmF":{"name":"iso8601","abstract":"<p>Encode/decode the <code>Date</code> to/from an ISO-8601-formatted string (in RFC 339 format).</p>","parent_name":"DateCodingStrategy"},"Enums/DateCodingStrategy.html#/s:4BSON18DateCodingStrategyO9formattedyACSo15NSDateFormatterCcACmF":{"name":"formatted(_:)","abstract":"<p>Encode/decode the <code>Date</code> to/from a string formatted by the given formatter.</p>","parent_name":"DateCodingStrategy"},"Enums/DateCodingStrategy.html#/s:4BSON18DateCodingStrategyO6customyACy10Foundation0B0V_s7Encoder_ptKc_AGs7Decoder_pKctcACmF":{"name":"custom(encodeFunc:decodeFunc:)","abstract":"<p>Encode the <code>Date</code> by using the given <code>encodeFunc</code>. Decode the <code>Date</code> by using the given <code>decodeFunc</code>.","parent_name":"DateCodingStrategy"},"Enums/DateCodingStrategy.html#/s:SY8rawValuexSg03RawB0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"DateCodingStrategy"},"Enums/DateCodingStrategy.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"DateCodingStrategy"},"Enums/BSONType.html#/s:4BSON8BSONTypeO7invalidyA2CmF":{"name":"invalid","abstract":"<p>An invalid type</p>","parent_name":"BSONType"},"Enums/BSONType.html#/s:4BSON8BSONTypeO6doubleyA2CmF":{"name":"double","abstract":"<p>64-bit binary floating point</p>","parent_name":"BSONType"},"Enums/BSONType.html#/s:4BSON8BSONTypeO6stringyA2CmF":{"name":"string","abstract":"<p>UTF-8 string</p>","parent_name":"BSONType"},"Enums/BSONType.html#/s:4BSON8BSONTypeO8documentyA2CmF":{"name":"document","abstract":"<p>BSON document</p>","parent_name":"BSONType"},"Enums/BSONType.html#/s:4BSON8BSONTypeO5arrayyA2CmF":{"name":"array","abstract":"<p>Array</p>","parent_name":"BSONType"},"Enums/BSONType.html#/s:4BSON8BSONTypeO6binaryyA2CmF":{"name":"binary","abstract":"<p>Binary data</p>","parent_name":"BSONType"},"Enums/BSONType.html#/s:4BSON8BSONTypeO9undefinedyA2CmF":{"name":"undefined","abstract":"<p>Undefined value - deprecated</p>","parent_name":"BSONType"},"Enums/BSONType.html#/s:4BSON8BSONTypeO8objectIDyA2CmF":{"name":"objectID","abstract":"<p>A MongoDB ObjectID.</p>","parent_name":"BSONType"},"Enums/BSONType.html#/s:4BSON8BSONTypeO4boolyA2CmF":{"name":"bool","abstract":"<p>A boolean</p>","parent_name":"BSONType"},"Enums/BSONType.html#/s:4BSON8BSONTypeO8datetimeyA2CmF":{"name":"datetime","abstract":"<p>UTC datetime, stored as UTC milliseconds since the Unix epoch</p>","parent_name":"BSONType"},"Enums/BSONType.html#/s:4BSON8BSONTypeO4nullyA2CmF":{"name":"null","abstract":"<p>Null value</p>","parent_name":"BSONType"},"Enums/BSONType.html#/s:4BSON8BSONTypeO5regexyA2CmF":{"name":"regex","abstract":"<p>A regular expression</p>","parent_name":"BSONType"},"Enums/BSONType.html#/s:4BSON8BSONTypeO9dbPointeryA2CmF":{"name":"dbPointer","abstract":"<p>A database pointer - deprecated</p>","parent_name":"BSONType"},"Enums/BSONType.html#/s:4BSON8BSONTypeO4codeyA2CmF":{"name":"code","abstract":"<p>Javascript code</p>","parent_name":"BSONType"},"Enums/BSONType.html#/s:4BSON8BSONTypeO6symbolyA2CmF":{"name":"symbol","abstract":"<p>A symbol - deprecated</p>","parent_name":"BSONType"},"Enums/BSONType.html#/s:4BSON8BSONTypeO13codeWithScopeyA2CmF":{"name":"codeWithScope","abstract":"<p>JavaScript code w/ scope</p>","parent_name":"BSONType"},"Enums/BSONType.html#/s:4BSON8BSONTypeO5int32yA2CmF":{"name":"int32","abstract":"<p>32-bit integer</p>","parent_name":"BSONType"},"Enums/BSONType.html#/s:4BSON8BSONTypeO9timestampyA2CmF":{"name":"timestamp","abstract":"<p>Special internal type used by MongoDB replication and sharding</p>","parent_name":"BSONType"},"Enums/BSONType.html#/s:4BSON8BSONTypeO5int64yA2CmF":{"name":"int64","abstract":"<p>64-bit integer</p>","parent_name":"BSONType"},"Enums/BSONType.html#/s:4BSON8BSONTypeO10decimal128yA2CmF":{"name":"decimal128","abstract":"<p>128-bit decimal floating point</p>","parent_name":"BSONType"},"Enums/BSONType.html#/s:4BSON8BSONTypeO6minKeyyA2CmF":{"name":"minKey","abstract":"<p>Special type which compares lower than all other possible BSON element values</p>","parent_name":"BSONType"},"Enums/BSONType.html#/s:4BSON8BSONTypeO6maxKeyyA2CmF":{"name":"maxKey","abstract":"<p>Special type which compares higher than all other possible BSON element values</p>","parent_name":"BSONType"},"Enums/BSONError/DocumentTooLargeError.html#/s:10Foundation14LocalizedErrorP16errorDescriptionSSSgvp":{"name":"errorDescription","parent_name":"DocumentTooLargeError"},"Enums/BSONError/LogicError.html#/s:10Foundation14LocalizedErrorP16errorDescriptionSSSgvp":{"name":"errorDescription","parent_name":"LogicError"},"Enums/BSONError/InternalError.html#/s:10Foundation14LocalizedErrorP16errorDescriptionSSSgvp":{"name":"errorDescription","parent_name":"InternalError"},"Enums/BSONError/InvalidArgumentError.html#/s:10Foundation14LocalizedErrorP16errorDescriptionSSSgvp":{"name":"errorDescription","parent_name":"InvalidArgumentError"},"Enums/BSONError/InvalidArgumentError.html":{"name":"InvalidArgumentError","abstract":"<p>An error thrown when the user passes in invalid arguments to a BSON method.</p>","parent_name":"BSONError"},"Enums/BSONError/InternalError.html":{"name":"InternalError","abstract":"<p>An error thrown when the BSON library encounters a internal error not caused by the user.","parent_name":"BSONError"},"Enums/BSONError/LogicError.html":{"name":"LogicError","abstract":"<p>An error thrown when the BSON library is incorrectly used.</p>","parent_name":"BSONError"},"Enums/BSONError/DocumentTooLargeError.html":{"name":"DocumentTooLargeError","abstract":"<p>An error thrown when a document exceeds the maximum BSON encoding size.</p>","parent_name":"BSONError"},"Enums/BSON.html#/s:4BSONAAO8documentyAbA12BSONDocumentVcABmF":{"name":"document(_:)","abstract":"<p>A BSON document.</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO5int32yABs5Int32VcABmF":{"name":"int32(_:)","abstract":"<p>A BSON int32.</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO5int64yABs5Int64VcABmF":{"name":"int64(_:)","abstract":"<p>A BSON int64.</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO10decimal128yAbA14BSONDecimal128VcABmF":{"name":"decimal128(_:)","abstract":"<p>A BSON Decimal128</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO5arrayyABSayABGcABmF":{"name":"array(_:)","abstract":"<p>A BSON Array</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO4boolyABSbcABmF":{"name":"bool(_:)","abstract":"<p>A BSON Boolean</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO8datetimeyAB10Foundation4DateVcABmF":{"name":"datetime(_:)","abstract":"<p>A BSON UTC datetime.</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO6doubleyABSdcABmF":{"name":"double(_:)","abstract":"<p>A BSON double.</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO6stringyABSScABmF":{"name":"string(_:)","abstract":"<p>A BSON string.</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO6symbolyAbA10BSONSymbolVcABmF":{"name":"symbol(_:)","abstract":"<p>A BSON Symbol</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO9timestampyAbA13BSONTimestampVcABmF":{"name":"timestamp(_:)","abstract":"<p>A BSON Timestamp</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO6binaryyAbA10BSONBinaryVcABmF":{"name":"binary(_:)","abstract":"<p>A BSON Binary</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO5regexyAbA21BSONRegularExpressionVcABmF":{"name":"regex(_:)","abstract":"<p>A BSON Regex</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO8objectIDyAbA010BSONObjectC0VcABmF":{"name":"objectID(_:)","abstract":"<p>A BSON ObjectID</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO9dbPointeryAbA13BSONDBPointerVcABmF":{"name":"dbPointer(_:)","abstract":"<p>A BSON DBPointer</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO4codeyAbA8BSONCodeVcABmF":{"name":"code(_:)","abstract":"<p>A BSON Code</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO13codeWithScopeyAbA08BSONCodecD0VcABmF":{"name":"codeWithScope(_:)","abstract":"<p>A BSON Code with Scope</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO4nullyA2BmF":{"name":"null","abstract":"<p>A BSON Null</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO9undefinedyA2BmF":{"name":"undefined","abstract":"<p>A BSON Undefined</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO6minKeyyA2BmF":{"name":"minKey","abstract":"<p>A BSON MinKey</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO6maxKeyyA2BmF":{"name":"maxKey","abstract":"<p>A BSON MaxKey</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAOyABSicfc":{"name":"init(_:)","abstract":"<p>Initialize a <code>BSON</code> from an integer. On 64-bit systems, this will result in an <code>.int64</code>. On 32-bit systems,","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO4typeAA8BSONTypeOvp":{"name":"type","abstract":"<p>Get the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/BSONType.html\">BSONType</a></code> of this <code>BSON</code>.</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO10int32Values5Int32VSgvp":{"name":"int32Value","abstract":"<p>If this <code>BSON</code> is an <code>.int32</code>, return it as an <code>Int32</code>. Otherwise, return nil.</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO10int64Values5Int64VSgvp":{"name":"int64Value","abstract":"<p>If this <code>BSON</code> is an <code>.int64</code>, return it as an <code>Int64</code>. Otherwise, return nil.</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO15decimal128ValueAA14BSONDecimal128VSgvp":{"name":"decimal128Value","abstract":"<p>If this <code>BSON</code> is an <code>.decimal128</code>, return it as an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BSONDecimal128.html\">BSONDecimal128</a></code>. Otherwise, return nil.</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO13documentValueAA12BSONDocumentVSgvp":{"name":"documentValue","abstract":"<p>If this <code>BSON</code> is a <code>.document</code>, return it as a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BSONDocument.html\">BSONDocument</a></code>. Otherwise, return nil.</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO10arrayValueSayABGSgvp":{"name":"arrayValue","abstract":"<p>If this <code>BSON</code> is a <code>.array</code>, return it as a <code>[BSON]</code>. Otherwise, return nil.</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO9boolValueSbSgvp":{"name":"boolValue","abstract":"<p>If this <code>BSON</code> is a <code>.bool</code>, return it as a <code>Bool</code>. Otherwise, return nil.</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO9dateValue10Foundation4DateVSgvp":{"name":"dateValue","abstract":"<p>If this <code>BSON</code> is a <code>.date</code>, return it as a <code>Date</code>. Otherwise, return nil.</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO11doubleValueSdSgvp":{"name":"doubleValue","abstract":"<p>If this <code>BSON</code> is a <code>.double</code>, return it as a <code>Double</code>. Otherwise, return nil.</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO11stringValueSSSgvp":{"name":"stringValue","abstract":"<p>If this <code>BSON</code> is a <code>.string</code>, return it as a <code>String</code>. Otherwise, return nil.</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO11symbolValueAA10BSONSymbolVSgvp":{"name":"symbolValue","abstract":"<p>If this <code>BSON</code> is a <code>.symbol</code>, return it as a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BSONSymbol.html\">BSONSymbol</a></code>. Otherwise, return nil.</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO14timestampValueAA13BSONTimestampVSgvp":{"name":"timestampValue","abstract":"<p>If this <code>BSON</code> is a <code>.timestamp</code>, return it as a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BSONTimestamp.html\">BSONTimestamp</a></code>. Otherwise, return nil.</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO11binaryValueAA10BSONBinaryVSgvp":{"name":"binaryValue","abstract":"<p>If this <code>BSON</code> is a <code>.binary</code>, return it as a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BSONBinary.html\">BSONBinary</a></code>. Otherwise, return nil.</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO10regexValueAA21BSONRegularExpressionVSgvp":{"name":"regexValue","abstract":"<p>If this <code>BSON</code> is a <code>.regex</code>, return it as a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BSONRegularExpression.html\">BSONRegularExpression</a></code>. Otherwise, return nil.</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO13objectIDValueAA12BSONObjectIDVSgvp":{"name":"objectIDValue","abstract":"<p>If this <code>BSON</code> is a <code>.objectID</code>, return it as a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BSONObjectID.html\">BSONObjectID</a></code>. Otherwise, return nil.</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO14dbPointerValueAA13BSONDBPointerVSgvp":{"name":"dbPointerValue","abstract":"<p>If this <code>BSON</code> is a <code>.dbPointer</code>, return it as a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BSONDBPointer.html\">BSONDBPointer</a></code>. Otherwise, return nil.</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO9codeValueAA8BSONCodeVSgvp":{"name":"codeValue","abstract":"<p>If this <code>BSON</code> is a <code>.code</code>, return it as a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BSONCode.html\">BSONCode</a></code>. Otherwise, return nil.</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO18codeWithScopeValueAA08BSONCodecD0VSgvp":{"name":"codeWithScopeValue","abstract":"<p>If this <code>BSON</code> is a <code>.codeWithScope</code>, return it as a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BSONCodeWithScope.html\">BSONCodeWithScope</a></code>. Otherwise, return nil.</p>","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO5toIntSiSgyF":{"name":"toInt()","abstract":"<p>Return this BSON as an <code>Int</code> if possible.","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO7toInt32s0C0VSgyF":{"name":"toInt32()","abstract":"<p>Return this BSON as an <code>Int32</code> if possible.","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO7toInt64s0C0VSgyF":{"name":"toInt64()","abstract":"<p>Return this BSON as an <code>Int64</code> if possible.","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO8toDoubleSdSgyF":{"name":"toDouble()","abstract":"<p>Return this BSON as a <code>Double</code> if possible.","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO12toDecimal128AA14BSONDecimal128VSgyF":{"name":"toDecimal128()","abstract":"<p>Return this BSON as a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BSONDecimal128.html\">BSONDecimal128</a></code> if possible.","parent_name":"BSON"},"Enums/BSON.html#/s:4BSONAAO14integerLiteralABSi_tcfc":{"name":"init(integerLiteral:)","abstract":"<p>Initialize a <code>BSON</code> from an integer. On 64-bit systems, this will result in an <code>.int64</code>. On 32-bit systems,","parent_name":"BSON"},"Enums/BSON.html#/s:s25ExpressibleByFloatLiteralP05floatD0x0cD4TypeQz_tcfc":{"name":"init(floatLiteral:)","parent_name":"BSON"},"Enums/BSON.html#/s:s27ExpressibleByBooleanLiteralP07booleanD0x0cD4TypeQz_tcfc":{"name":"init(booleanLiteral:)","parent_name":"BSON"},"Enums/BSON.html#/s:s30ExpressibleByDictionaryLiteralP010dictionaryD0x3KeyQz_5ValueQztd_tcfc":{"name":"init(dictionaryLiteral:)","parent_name":"BSON"},"Enums/BSON.html#/s:s26ExpressibleByStringLiteralP06stringD0x0cD4TypeQz_tcfc":{"name":"init(stringLiteral:)","parent_name":"BSON"},"Enums/BSON.html#/s:s25ExpressibleByArrayLiteralP05arrayD0x0cD7ElementQzd_tcfc":{"name":"init(arrayLiteral:)","parent_name":"BSON"},"Enums/BSON.html#/s:Se4fromxs7Decoder_p_tKcfc":{"name":"init(from:)","parent_name":"BSON"},"Enums/BSON.html#/s:SE6encode2toys7Encoder_p_tKF":{"name":"encode(to:)","parent_name":"BSON"},"Enums/BSON.html":{"name":"BSON","abstract":"<p>Enum representing a BSON value.</p>"},"Enums/BSONError.html":{"name":"BSONError","abstract":"<p>Namespace containing all the error types introduced by this BSON library and their dependent types.</p>"},"Enums/BSONType.html":{"name":"BSONType","abstract":"<p>The possible types of BSON values and their corresponding integer values.</p>"},"Enums/DateCodingStrategy.html":{"name":"DateCodingStrategy","abstract":"<p>Enum representing the various encoding/decoding strategy pairs for <code>Date</code>s."},"Enums/UUIDCodingStrategy.html":{"name":"UUIDCodingStrategy","abstract":"<p>Enum representing the various encoding/decoding strategy pairs for <code>Date</code>s."},"Enums/DataCodingStrategy.html":{"name":"DataCodingStrategy","abstract":"<p>Enum representing the various encoding/decoding strategy pairs for <code>Date</code>s."},"Classes/ExtendedJSONEncoder/OutputFormatting.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"OutputFormatting"},"Classes/ExtendedJSONEncoder/OutputFormatting.html#/s:s9OptionSetP8rawValuex03RawD0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"OutputFormatting"},"Classes/ExtendedJSONEncoder/OutputFormatting.html#/s:4BSON19ExtendedJSONEncoderC16OutputFormattingV13prettyPrintedAEvpZ":{"name":"prettyPrinted","abstract":"<p>Produce human-readable JSON with indented output.</p>","parent_name":"OutputFormatting"},"Classes/ExtendedJSONEncoder/OutputFormatting.html#/s:4BSON19ExtendedJSONEncoderC16OutputFormattingV10sortedKeysAEvpZ":{"name":"sortedKeys","abstract":"<p>Produce JSON with dictionary keys sorted in lexicographic order.</p>","parent_name":"OutputFormatting"},"Classes/ExtendedJSONEncoder/Mode.html#/s:4BSON19ExtendedJSONEncoderC4ModeO9canonicalyA2EmF":{"name":"canonical","abstract":"<p>Canonical Extended JSON Format: Emphasizes type preservation","parent_name":"Mode"},"Classes/ExtendedJSONEncoder/Mode.html#/s:4BSON19ExtendedJSONEncoderC4ModeO7relaxedyA2EmF":{"name":"relaxed","abstract":"<p>Relaxed Extended JSON Format: Emphasizes readability and interoperability","parent_name":"Mode"},"Classes/ExtendedJSONEncoder/Mode.html":{"name":"Mode","abstract":"<p>An enum representing one of the two supported string formats based on the JSON standard","parent_name":"ExtendedJSONEncoder"},"Classes/ExtendedJSONEncoder/OutputFormatting.html":{"name":"OutputFormatting","abstract":"<p>The output formatting options that determine the readability, size, and element order of an encoded JSON object.</p>","parent_name":"ExtendedJSONEncoder"},"Classes/ExtendedJSONEncoder.html#/s:4BSON19ExtendedJSONEncoderC4modeAC4ModeOvp":{"name":"mode","abstract":"<p>Determines whether to encode to canonical or relaxed extended JSON. Default is relaxed.</p>","parent_name":"ExtendedJSONEncoder"},"Classes/ExtendedJSONEncoder.html#/s:4BSON19ExtendedJSONEncoderC8userInfoSDys010CodingUserE3KeyVypGvp":{"name":"userInfo","abstract":"<p>Contextual user-provided information for use during encoding.</p>","parent_name":"ExtendedJSONEncoder"},"Classes/ExtendedJSONEncoder.html#/s:4BSON19ExtendedJSONEncoderC16outputFormattingAC06OutputE0Vvp":{"name":"outputFormatting","abstract":"<p>A value that determines the readability, size, and element order of the encoded JSON object.</p>","parent_name":"ExtendedJSONEncoder"},"Classes/ExtendedJSONEncoder.html#/s:4BSON19ExtendedJSONEncoderCACycfc":{"name":"init()","abstract":"<p>Initialize an <code>ExtendedJSONEncoder</code>.</p>","parent_name":"ExtendedJSONEncoder"},"Classes/ExtendedJSONEncoder.html#/s:4BSON19ExtendedJSONEncoderC6encodey10Foundation4DataVxKSERzlF":{"name":"encode(_:)","abstract":"<p>Encodes an instance of the Encodable Type <code>T</code> into Data representing canonical or relaxed extended JSON.","parent_name":"ExtendedJSONEncoder"},"Classes/ExtendedJSONDecoder.html#/s:4BSON19ExtendedJSONDecoderC8userInfoSDys010CodingUserE3KeyVypGvp":{"name":"userInfo","abstract":"<p>Contextual user-provided information for use during decoding.</p>","parent_name":"ExtendedJSONDecoder"},"Classes/ExtendedJSONDecoder.html#/s:4BSON19ExtendedJSONDecoderCACycfc":{"name":"init()","abstract":"<p>Initialize an <code>ExtendedJSONDecoder</code>.</p>","parent_name":"ExtendedJSONDecoder"},"Classes/ExtendedJSONDecoder.html#/s:4BSON19ExtendedJSONDecoderC6decode_4fromxxm_10Foundation4DataVtKSeRzlF":{"name":"decode(_:from:)","abstract":"<p>Decodes an instance of the requested type <code>T</code> from the provided extended JSON data.</p>","parent_name":"ExtendedJSONDecoder"},"Classes/BSONEncoder/DataEncodingStrategy.html#/s:4BSON11BSONEncoderC20DataEncodingStrategyO010deferredToC0yA2EmF":{"name":"deferredToData","abstract":"<p>Encode the <code>Data</code> by deferring to its default encoding implementation.</p>","parent_name":"DataEncodingStrategy"},"Classes/BSONEncoder/DataEncodingStrategy.html#/s:4BSON11BSONEncoderC20DataEncodingStrategyO6binaryyA2EmF":{"name":"binary","abstract":"<p>Encode the <code>Data</code> as a BSON binary type (default).</p>","parent_name":"DataEncodingStrategy"},"Classes/BSONEncoder/DataEncodingStrategy.html#/s:4BSON11BSONEncoderC20DataEncodingStrategyO6base64yA2EmF":{"name":"base64","abstract":"<p>Encode the <code>Data</code> as a base64 encoded string.</p>","parent_name":"DataEncodingStrategy"},"Classes/BSONEncoder/DataEncodingStrategy.html#/s:4BSON11BSONEncoderC20DataEncodingStrategyO6customyAEy10Foundation0C0V_s7Encoder_ptKccAEmF":{"name":"custom(_:)","abstract":"<p>Encode the <code>Data</code> by using the given closure.","parent_name":"DataEncodingStrategy"},"Classes/BSONEncoder/UUIDEncodingStrategy.html#/s:4BSON11BSONEncoderC20UUIDEncodingStrategyO14deferredToUUIDyA2EmF":{"name":"deferredToUUID","abstract":"<p>Encode the <code>UUID</code> by deferring to its default encoding implementation.</p>","parent_name":"UUIDEncodingStrategy"},"Classes/BSONEncoder/UUIDEncodingStrategy.html#/s:4BSON11BSONEncoderC20UUIDEncodingStrategyO6binaryyA2EmF":{"name":"binary","abstract":"<p>Encode the <code>UUID</code> as a BSON binary type (default).</p>","parent_name":"UUIDEncodingStrategy"},"Classes/BSONEncoder/DateEncodingStrategy.html#/s:4BSON11BSONEncoderC20DateEncodingStrategyO010deferredToC0yA2EmF":{"name":"deferredToDate","abstract":"<p>Encode the <code>Date</code> by deferring to its default encoding implementation.</p>","parent_name":"DateEncodingStrategy"},"Classes/BSONEncoder/DateEncodingStrategy.html#/s:4BSON11BSONEncoderC20DateEncodingStrategyO04bsonC4TimeyA2EmF":{"name":"bsonDateTime","abstract":"<p>Encode the <code>Date</code> as a BSON datetime object (default).</p>","parent_name":"DateEncodingStrategy"},"Classes/BSONEncoder/DateEncodingStrategy.html#/s:4BSON11BSONEncoderC20DateEncodingStrategyO21millisecondsSince1970yA2EmF":{"name":"millisecondsSince1970","abstract":"<p>Encode the <code>Date</code> as a 64-bit integer counting the number of milliseconds since January 1, 1970.</p>","parent_name":"DateEncodingStrategy"},"Classes/BSONEncoder/DateEncodingStrategy.html#/s:4BSON11BSONEncoderC20DateEncodingStrategyO16secondsSince1970yA2EmF":{"name":"secondsSince1970","abstract":"<p>Encode the <code>Date</code> as a BSON double counting the number of seconds since January 1, 1970.</p>","parent_name":"DateEncodingStrategy"},"Classes/BSONEncoder/DateEncodingStrategy.html#/s:4BSON11BSONEncoderC20DateEncodingStrategyO7iso8601yA2EmF":{"name":"iso8601","abstract":"<p>Encode the <code>Date</code> as an ISO-8601-formatted string (in RFC 339 format).</p>","parent_name":"DateEncodingStrategy"},"Classes/BSONEncoder/DateEncodingStrategy.html#/s:4BSON11BSONEncoderC20DateEncodingStrategyO9formattedyAESo15NSDateFormatterCcAEmF":{"name":"formatted(_:)","abstract":"<p>Encode the <code>Date</code> as a string formatted by the given formatter.</p>","parent_name":"DateEncodingStrategy"},"Classes/BSONEncoder/DateEncodingStrategy.html#/s:4BSON11BSONEncoderC20DateEncodingStrategyO6customyAEy10Foundation0C0V_s7Encoder_ptKccAEmF":{"name":"custom(_:)","abstract":"<p>Encode the <code>Date</code> by using the given closure.","parent_name":"DateEncodingStrategy"},"Classes/BSONEncoder/DateEncodingStrategy.html":{"name":"DateEncodingStrategy","abstract":"<p>Enum representing the various strategies for encoding <code>Date</code>s.</p>","parent_name":"BSONEncoder"},"Classes/BSONEncoder/UUIDEncodingStrategy.html":{"name":"UUIDEncodingStrategy","abstract":"<p>Enum representing the various strategies for encoding <code>UUID</code>s.</p>","parent_name":"BSONEncoder"},"Classes/BSONEncoder/DataEncodingStrategy.html":{"name":"DataEncodingStrategy","abstract":"<p>Enum representing the various strategies for encoding <code>Data</code>s.</p>","parent_name":"BSONEncoder"},"Classes/BSONEncoder.html#/s:4BSON11BSONEncoderC20dateEncodingStrategyAC04DatedE0Ovp":{"name":"dateEncodingStrategy","abstract":"<p>The strategy to use for encoding <code>Date</code>s with this instance.</p>","parent_name":"BSONEncoder"},"Classes/BSONEncoder.html#/s:4BSON11BSONEncoderC20uuidEncodingStrategyAC012UUIDEncodingE0Ovp":{"name":"uuidEncodingStrategy","abstract":"<p>The strategy to use for encoding <code>UUID</code>s with this instance.</p>","parent_name":"BSONEncoder"},"Classes/BSONEncoder.html#/s:4BSON11BSONEncoderC20dataEncodingStrategyAC04DatadE0Ovp":{"name":"dataEncodingStrategy","abstract":"<p>The strategy to use for encoding <code>Data</code>s with this instance.</p>","parent_name":"BSONEncoder"},"Classes/BSONEncoder.html#/s:4BSON11BSONEncoderC8userInfoSDys010CodingUserD3KeyVypGvp":{"name":"userInfo","abstract":"<p>Contextual user-provided information for use during encoding.</p>","parent_name":"BSONEncoder"},"Classes/BSONEncoder.html#/s:4BSON11BSONEncoderC7optionsAcA22CodingStrategyProvider_pSg_tcfc":{"name":"init(options:)","abstract":"<p>Initializes <code>self</code>.</p>","parent_name":"BSONEncoder"},"Classes/BSONEncoder.html#/s:4BSON11BSONEncoderC6encodeyAA12BSONDocumentVxKSERzlF":{"name":"encode(_:)","abstract":"<p>Encodes the given top-level value and returns its BSON representation.</p>","parent_name":"BSONEncoder"},"Classes/BSONEncoder.html#/s:4BSON11BSONEncoderC6encodeyAA12BSONDocumentVSgxSgKSERzlF":{"name":"encode(_:)","abstract":"<p>Encodes the given top-level optional value and returns its BSON representation. Returns nil if the","parent_name":"BSONEncoder"},"Classes/BSONEncoder.html#/s:4BSON11BSONEncoderC6encodeySayAA12BSONDocumentVGSayxGKSERzlF":{"name":"encode(_:)","abstract":"<p>Encodes the given array of top-level values and returns an array of their BSON representations.</p>","parent_name":"BSONEncoder"},"Classes/BSONEncoder.html#/s:4BSON11BSONEncoderC6encodeySayAA12BSONDocumentVSgGSayxSgGKSERzlF":{"name":"encode(_:)","abstract":"<p>Encodes the given array of top-level optional values and returns an array of their BSON representations.","parent_name":"BSONEncoder"},"Classes/BSONDecoder/DataDecodingStrategy.html#/s:4BSON11BSONDecoderC20DataDecodingStrategyO010deferredToC0yA2EmF":{"name":"deferredToData","abstract":"<p>Decode <code>Data</code>s by deferring to their default decoding implementation.</p>","parent_name":"DataDecodingStrategy"},"Classes/BSONDecoder/DataDecodingStrategy.html#/s:4BSON11BSONDecoderC20DataDecodingStrategyO6binaryyA2EmF":{"name":"binary","abstract":"<p>Decode <code>Data</code>s stored as the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BSONBinary.html\">BSONBinary</a></code> type (default).</p>","parent_name":"DataDecodingStrategy"},"Classes/BSONDecoder/DataDecodingStrategy.html#/s:4BSON11BSONDecoderC20DataDecodingStrategyO6base64yA2EmF":{"name":"base64","abstract":"<p>Decode <code>Data</code>s stored as base64 encoded strings.</p>","parent_name":"DataDecodingStrategy"},"Classes/BSONDecoder/DataDecodingStrategy.html#/s:4BSON11BSONDecoderC20DataDecodingStrategyO6customyAE10Foundation0C0Vs7Decoder_pKccAEmF":{"name":"custom(_:)","abstract":"<p>Decode <code>Data</code>s using the provided closure.</p>","parent_name":"DataDecodingStrategy"},"Classes/BSONDecoder/UUIDDecodingStrategy.html#/s:4BSON11BSONDecoderC20UUIDDecodingStrategyO14deferredToUUIDyA2EmF":{"name":"deferredToUUID","abstract":"<p>Decode <code>UUID</code>s by deferring to their default decoding implementation.</p>","parent_name":"UUIDDecodingStrategy"},"Classes/BSONDecoder/UUIDDecodingStrategy.html#/s:4BSON11BSONDecoderC20UUIDDecodingStrategyO6binaryyA2EmF":{"name":"binary","abstract":"<p>Decode <code>UUID</code>s stored as the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BSONBinary.html\">BSONBinary</a></code> type (default).</p>","parent_name":"UUIDDecodingStrategy"},"Classes/BSONDecoder/DateDecodingStrategy.html#/s:4BSON11BSONDecoderC20DateDecodingStrategyO04bsonC4TimeyA2EmF":{"name":"bsonDateTime","abstract":"<p>Decode <code>Date</code>s stored as BSON datetimes (default).</p>","parent_name":"DateDecodingStrategy"},"Classes/BSONDecoder/DateDecodingStrategy.html#/s:4BSON11BSONDecoderC20DateDecodingStrategyO21millisecondsSince1970yA2EmF":{"name":"millisecondsSince1970","abstract":"<p>Decode <code>Date</code>s stored as numbers of seconds since January 1, 1970.</p>","parent_name":"DateDecodingStrategy"},"Classes/BSONDecoder/DateDecodingStrategy.html#/s:4BSON11BSONDecoderC20DateDecodingStrategyO16secondsSince1970yA2EmF":{"name":"secondsSince1970","abstract":"<p>Decode <code>Date</code>s stored as numbers of milliseconds since January 1, 1970.</p>","parent_name":"DateDecodingStrategy"},"Classes/BSONDecoder/DateDecodingStrategy.html#/s:4BSON11BSONDecoderC20DateDecodingStrategyO010deferredToC0yA2EmF":{"name":"deferredToDate","abstract":"<p>Decode <code>Date</code>s by deferring to their default decoding implementation.</p>","parent_name":"DateDecodingStrategy"},"Classes/BSONDecoder/DateDecodingStrategy.html#/s:4BSON11BSONDecoderC20DateDecodingStrategyO7iso8601yA2EmF":{"name":"iso8601","abstract":"<p>Decode <code>Date</code>s stored as ISO8601 formatted strings.</p>","parent_name":"DateDecodingStrategy"},"Classes/BSONDecoder/DateDecodingStrategy.html#/s:4BSON11BSONDecoderC20DateDecodingStrategyO9formattedyAESo15NSDateFormatterCcAEmF":{"name":"formatted(_:)","abstract":"<p>Decode <code>Date</code>s stored as strings parsable by the given formatter.</p>","parent_name":"DateDecodingStrategy"},"Classes/BSONDecoder/DateDecodingStrategy.html#/s:4BSON11BSONDecoderC20DateDecodingStrategyO6customyAE10Foundation0C0Vs7Decoder_pKccAEmF":{"name":"custom(_:)","abstract":"<p>Decode <code>Date</code>s using the provided closure.</p>","parent_name":"DateDecodingStrategy"},"Classes/BSONDecoder/DateDecodingStrategy.html":{"name":"DateDecodingStrategy","abstract":"<p>Enum representing the various strategies for decoding <code>Date</code>s from BSON.</p>","parent_name":"BSONDecoder"},"Classes/BSONDecoder/UUIDDecodingStrategy.html":{"name":"UUIDDecodingStrategy","abstract":"<p>Enum representing the various strategies for decoding <code>UUID</code>s from BSON.</p>","parent_name":"BSONDecoder"},"Classes/BSONDecoder/DataDecodingStrategy.html":{"name":"DataDecodingStrategy","abstract":"<p>Enum representing the various strategies for decoding <code>Data</code>s from BSON.</p>","parent_name":"BSONDecoder"},"Classes/BSONDecoder.html#/s:4BSON11BSONDecoderC8userInfoSDys010CodingUserD3KeyVypGvp":{"name":"userInfo","abstract":"<p>Contextual user-provided information for use during decoding.</p>","parent_name":"BSONDecoder"},"Classes/BSONDecoder.html#/s:4BSON11BSONDecoderC20dateDecodingStrategyAC04DatedE0Ovp":{"name":"dateDecodingStrategy","abstract":"<p>The strategy used for decoding <code>Date</code>s with this instance.</p>","parent_name":"BSONDecoder"},"Classes/BSONDecoder.html#/s:4BSON11BSONDecoderC20uuidDecodingStrategyAC012UUIDDecodingE0Ovp":{"name":"uuidDecodingStrategy","abstract":"<p>The strategy used for decoding <code>UUID</code>s with this instance.</p>","parent_name":"BSONDecoder"},"Classes/BSONDecoder.html#/s:4BSON11BSONDecoderC20dataDecodingStrategyAC04DatadE0Ovp":{"name":"dataDecodingStrategy","abstract":"<p>The strategy used for decoding <code>Data</code>s with this instance.</p>","parent_name":"BSONDecoder"},"Classes/BSONDecoder.html#/s:4BSON11BSONDecoderC7optionsAcA22CodingStrategyProvider_pSg_tcfc":{"name":"init(options:)","abstract":"<p>Initializes <code>self</code>.</p>","parent_name":"BSONDecoder"},"Classes/BSONDecoder.html#/s:4BSON11BSONDecoderC6decode_4fromxxm_AA12BSONDocumentVtKSeRzlF":{"name":"decode(_:from:)","abstract":"<p>Decodes a top-level value of the given type from the given BSON document.</p>","parent_name":"BSONDecoder"},"Classes/BSONDecoder.html#/s:4BSON11BSONDecoderC6decode_4fromxxm_10Foundation4DataVtKSeRzlF":{"name":"decode(_:from:)","abstract":"<p>Decodes a top-level value of the given type from the given BSON data.</p>","parent_name":"BSONDecoder"},"Classes/BSONDecoder.html#/s:4BSON11BSONDecoderC6decode_4fromxxm_SStKSeRzlF":{"name":"decode(_:from:)","abstract":"<p>Decodes a top-level value of the given type from the given JSON/extended JSON string.</p>","parent_name":"BSONDecoder"},"Classes/BSONDecoder.html":{"name":"BSONDecoder","abstract":"<p><code>BSONDecoder</code> facilitates the decoding of BSON into semantic <code>Decodable</code> types.</p>"},"Classes/BSONEncoder.html":{"name":"BSONEncoder","abstract":"<p><code>BSONEncoder</code> facilitates the encoding of <code>Encodable</code> values into BSON.</p>"},"Classes/ExtendedJSONDecoder.html":{"name":"ExtendedJSONDecoder","abstract":"<p><code>ExtendedJSONDecoder</code> facilitates the decoding of ExtendedJSON into <code>Decodable</code> values.</p>"},"Classes/ExtendedJSONEncoder.html":{"name":"ExtendedJSONEncoder","abstract":"<p>Facilitates the encoding of <code>Encodable</code> values into ExtendedJSON.</p>"},"bson.html":{"name":"BSON"},"Guides.html":{"name":"Guides","abstract":"<p>The following guides are available globally.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}